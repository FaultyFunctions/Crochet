define("./workbox-aeb500b2.js",["exports"],(function(e){"use strict";try{self["workbox:core:5.1.3"]&&_()}catch(e){}const t=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class s extends Error{constructor(e,s){super(t(e,s)),this.name=e,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const n=e=>e&&"object"==typeof e?e:{handle:e};class r{constructor(e,t,s="GET"){this.handler=n(t),this.match=e,this.method=s}}class o extends r{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}class i{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:r}=this.findMatchingRoute({url:s,request:e,event:t});let o,i=r&&r.handler;if(!i&&this.s&&(i=this.s),i){try{o=i.handle({url:s,request:e,event:t,params:n})}catch(e){o=Promise.reject(e)}return o instanceof Promise&&this.o&&(o=o.catch(n=>this.o.handle({url:s,request:e,event:t}))),o}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const r of n){let n;const o=r.match({url:e,request:t,event:s});if(o)return n=o,(Array.isArray(o)&&0===o.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e){this.s=n(e)}setCatchHandler(e){this.o=n(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new s("unregister-route-but-not-found-with-method",{method:e.method});const t=this.t.get(e.method).indexOf(e);if(!(t>-1))throw new s("unregister-route-route-not-registered");this.t.get(e.method).splice(t,1)}}let c;const u=()=>(c||(c=new i,c.addFetchListener(),c.addCacheListener()),c);const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},h=e=>[a.prefix,e,a.suffix].filter(e=>e&&e.length>0).join("-"),l=e=>e||h(a.runtime);new Set;const f=(e,t)=>e.filter(e=>t in e),p=async({request:e,mode:t,plugins:s=[]})=>{const n=f(s,"cacheKeyWillBeUsed");let r=e;for(const e of n)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r));return r},d=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:r=[]})=>{const o=await self.caches.open(e),i=await p({plugins:r,request:t,mode:"read"});let c=await o.match(i,n);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;c=await r.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:c,request:i})}return c},w=d;try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}e.CacheOnly=class{constructor(e={}){this.i=l(e.cacheName),this.u=e.plugins||[],this.h=e.matchOptions}async handle({event:e,request:t}){"string"==typeof t&&(t=new Request(t));const n=await w({cacheName:this.i,request:t,event:e,matchOptions:this.h,plugins:this.u});if(!n)throw new s("no-response",{url:t.url});return n}},e.registerRoute=function(e,t,n){let i;if("string"==typeof e){const s=new URL(e,location.href);i=new r(({url:e})=>e.href===s.href,t,n)}else if(e instanceof RegExp)i=new o(e,t,n);else if("function"==typeof e)i=new r(e,t,n);else{if(!(e instanceof r))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}return u().registerRoute(i),i}}));
//# sourceMappingURL=workbox-aeb500b2.js.map
